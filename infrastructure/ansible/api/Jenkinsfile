#!/usr/bin/env groovy
def deploy_version = ''

node('jenkins-slave') {

    stage('Checkout') {
      checkout scm
      pom = readMavenPom file: 'pom.xml'
    }


    stage('Deploy') {
      // deploy latest pom version unless version specified. make sure to create build parameter called 'version' and that 'latest' is the default value.
      if (params.version == 'latest') { deploy_version = "${pom.version}" } else { deploy_version = params.version }
      currentBuild.displayName = "${env.BUILD_NUMBER}:deploy:mario/gs-spring-boot-docker:${deploy_version}"
      // go into ansible directory
      dir ('./infrastructure/ansible/api') {
        // pull in ansible roles from github
        sh "ansible-galaxy install -r requirements.yml";
        // deploy via ansible
        switch(env.JOB_NAME) {
          case ~/^mario.*$/:
            ansiblePlaybook(
              playbook: 'deploy.yml',
              extraVars: [
                env: 'dev',
                ecs_type: "spot",
                container_family: "mario",
                container_name: "gs-spring-boot-docker",
                container_version: "${deploy_version}",
                container_cpu: "1024",
                container_mem: "1048",
                multi_az: "no",
                service_count: "3"
            ])
          break;
          default: 
            sh "echo \"nothing to build. make sure jenkins job name specifies environment. ex. dev-yourapp-deploy\""
            sh "exit 1"
        }
      }
    }
}
